{"version":3,"sources":["context/context.js","context/action-types.js","context/reducer.js","apiConfig.js","api/auth.js","components/auth/ChangePassword.js","shared/Modal.js","components/Main/UploadImage.js","shared/UploadImageModal.js","shared/DropDown.js","components/Header/Header.js","components/Main/MsgInput.js","shared/updateCache.js","components/Main/MessageJSX.js","components/Main/RoomTitle.js","api/CreateRoom.js","api/ShowRooms.js","api/GoOffline.js","api/ShowServerUsers.js","shared/ServerUser.js","api/addUser.js","shared/ServerUsersSideBar.js","shared/CreateRoomModal.js","api/messageHistory.js","components/Main/MainContent.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","App.js","index.js"],"names":["AppContext","createContext","SET_USERNAME","SET_USER_ID","SET_TOKEN","SET_SIGNEDIN","SET_ROOMS_ID","SAVE_STATE","SET_SERVER_USERS","ADD_CACHE","ALL_TYPES","state","action","type","payload","cachedPfps","userName","userId","token","loggedIn","rooms","serverUsers","shouldSaveState","apiUrls","apiUrl","window","location","hostname","deleteUser","axios","method","url","headers","Authorization","uploadPfp","file","a","buffer","formData","FormData","append","options","body","fetch","signIn","credentials","data","password","ChangePassword","closeModal","useContext","history","dispatch","useHistory","useState","oldPassword","setOldPassword","newPassword","setNewPassword","className","Form","Group","controlId","Label","Control","required","name","value","placeholder","onChange","e","target","Button","variant","onClick","passwords","old","new","changePassword","then","response","push","catch","error","to","Modale","title","show","setShow","handleClose","Modal","onHide","centered","Header","closeButton","Title","Body","path","render","UploadImage","imageRef","createRef","onChangePfp","preventDefault","console","log","current","files","uploadStatus","status","toast","success","onSubmit","id","accept","multiple","ref","UploadImageModal","event","DropDown","user","handleDelete","forEach","Dropdown","Toggle","Menu","Divider","style","color","fontWeight","authenticatedOptions","unauthenticatedOptions","MsgInput","received","room","messageText","setMessageText","socket","setSocket","connected","setConnected","setSocketAuthed","useEffect","io","withCredentials","query","on","res","emit","roomId","msg","message","timestamp","Date","toLocaleString","updateCache","storage","sessionStorage","unCached","filter","some","_id","Promise","all","map","userObj","cacheObj","get","arrayBuffer","bufferToString","cachePairs","newCache","length","setItem","getPfp","getItem","prefix","binary","Uint8Array","byte","String","fromCharCode","btoa","timeStampStyle","Message","props","col","src","text","RoomTitle","createRoom","roomName","showRooms","goOffline","showServerUsers","ServerUser","add","addUserToRoom","ServerUserSideBar","currentRoom","serverUsersJSX","setServerUsersJSX","addUser","updateUsers","ShowServerUsers","usersArray","ModaleCreateRoom","setRoomName","onCreateRoom","messageHistory","AlwaysScrollToBottom","elementRef","scrollIntoView","behavior","MainContent","messages","setMessages","components","setComponents","newMessageObj","setNewMessageObj","roomsJSX","setRoomsJSX","setCurrentRoom","changedRoom","setChangedRoom","currentRoomName","setCurrentRoomName","changedRoomName","setChangedRoomName","result","newRooms","removeEventListener","messageObjs","sentAt","href","changeRoom","addEventListener","deleteRoom","updateRooms","newArray","existingRoom","validUsers","includes","roomIntervalId","setInterval","func","newArr","i","toString","Container","Row","Col","SignUp","email","setEmail","username","setUsername","setPassword","passConfirm","setPassConfirm","onSignUp","split","pop","apiObj","passwordConfirmation","password_confirmation","pfpType","SignIn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","SignOut","clearInterval","intervalId","signOut","finally","initialState","App","useReducer","reducer","Provider","component","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c48f05e7.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst AppContext = createContext()\n\nexport default AppContext\n","export const SET_USERNAME = 'SET_USERNAME'\nexport const SET_USER_ID = 'SET_USER_ID'\nexport const SET_TOKEN = 'SET_TOKEN'\nexport const SET_SIGNEDIN = 'SET_SIGNEDIN'\nexport const SET_ROOMS_ID = 'SET_ROOMS_ID'\nexport const SAVE_STATE = 'SET_STATE'\nexport const SET_SERVER_USERS = 'SET_SERVER_USERS'\n\n// don't include in ALL_TYPES\nexport const ADD_CACHE = 'ADD_CACHE'\n\nexport const ALL_TYPES = [\n    SET_USERNAME,\n    SET_USER_ID,\n    SET_TOKEN,\n    SET_SIGNEDIN,\n    SET_ROOMS_ID,\n    SET_SERVER_USERS,\n    SAVE_STATE,\n]","import {\n    SET_USERNAME,\n    SET_USER_ID,\n    SET_TOKEN,\n    SET_SIGNEDIN,\n    SET_ROOMS_ID,\n    SET_SERVER_USERS,\n    SAVE_STATE,\n    ADD_CACHE\n} from './action-types'\n\nexport default (state, action) => {\n    switch (action.type) {\n        case ADD_CACHE:\n            return action.payload === null\n                ? {...state, cachedPfps: []}\n                : {...state, cachedPfps: action.payload}\n        case SET_USERNAME:\n            return action.payload === null\n                ? {...state, userName: null}\n                : {...state, userName: action.payload}\n        case SET_USER_ID:\n            return action.payload === null\n                ? {...state, userId: null}\n                : {...state, userId: action.payload}\n        case SET_USER_ID:\n            return action.payload === null\n                ? {...state, userId: null}\n                : {...state, userId: action.payload}\n        case SET_TOKEN:\n            return action.payload === null\n                ? {...state, token: null}\n                : {...state, token: action.payload}\n        case SET_SIGNEDIN:\n            return action.payload === null\n                ? {...state, loggedIn: false}\n                : {...state, loggedIn: action.payload}\n        case SET_ROOMS_ID:\n            return action.payload === null\n                ? {...state, rooms: null}\n                : {...state, rooms: action.payload}\n        case SET_SERVER_USERS:\n            return action.payload === null\n                ? {...state, serverUsers: null}\n                : {...state, serverUsers: action.payload}\n        case SAVE_STATE:\n            return action.payload === null\n                ? {...state, shouldSaveState: false}\n                : {...state, shouldSaveState: action.payload}\n        default: \n          return state \n    }\n}","let apiUrl\nconst apiUrls = {\n\tproduction: 'https://gg-chat-api.herokuapp.com',\n\tdevelopment: 'http://localhost:3040',\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  //console.log(credentials)\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation,\n        userName: credentials.userName,\n        pfpType: credentials.pfpType\n      }\n    },\n  })\n}\n\nexport const deleteUser = (token) => {\n  return axios({\n\t\tmethod: 'DELETE',\n\t\turl: apiUrl + '/delete-account',\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t},\n\t})\n}\n\nexport const uploadPfp = async (file, userName) => {\n  const buffer = file\n  //console.log('buffer:')\n  //console.log(buffer)\n  //console.log(buffer)\n  const formData = new FormData()\n\tformData.append('pfp', buffer)\n  const options = {\n\t\tmethod: 'POST',\n\t\tbody: formData,\n\t}\n  //console.log(options)\n\treturn fetch(apiUrl + '/upload/' + userName, options)\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        userName: credentials.userName,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (token) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, token) => {\n  //console.log(passwords, token,\"Hello thereerer\");\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.old,\n        new: passwords.new,\n      }\n    }\n  })\n}\n","import React, { useState, useContext } from 'react'\nimport AppContext from '../../context/context'\nimport { Redirect, useHistory } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({closeModal}) => {\n    const {state, dispatch} = useContext(AppContext)\n    const history = useHistory()\n    const { loggedIn, token } = state\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n\n    const onChangePassword = () => {\n\n        const passwords = {\n            old: oldPassword,\n            new: newPassword\n        }\n    changePassword(passwords, token)\n        .then((response) =>{\n        closeModal()\n        // put toast here\n        \n        //console.log(props,  \"kaskdakddkadasndakdaksdkandakdsd\");\n        \n        })\n        .then(() => history.push('/'))\n        .catch((error) => {\n        setNewPassword('')\n        setOldPassword('')\n        //Failure toast here\n        \n        })\n    }\n\n    return (\n        !loggedIn ? <Redirect to='/' /> :\n        <div className='row changePass-parent-wrapper '>\n        <div className='changePass-form-wrapper'>\n            <Form className=\"changePass-form\" >\n            <Form.Group controlId='oldPassword'>\n                <Form.Label>Old password</Form.Label>\n                <Form.Control\n                required\n                name='oldPassword'\n                value={oldPassword}\n                type='password'\n                placeholder='Old Password'\n                onChange={(e) => setOldPassword(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Group controlId='newPassword'>\n                <Form.Label>New Password</Form.Label>\n                <Form.Control\n                required\n                name='newPassword'\n                value={newPassword}\n                type='password'\n                placeholder='New Password'\n                onChange={(e) => setNewPassword(e.target.value)}\n                />\n            </Form.Group>\n            <Button variant='primary' type='button' onClick={onChangePassword}>Submit</Button>\n            </Form>\n        </div>\n        </div>\n    )\n}\n\nexport default ChangePassword\n","import React, { useState } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport { NavLink, Route } from 'react-router-dom'\nimport ChangePassword from '../components/auth/ChangePassword'\n\nconst Modale = ({title}) => {\n  const [show, setShow] = useState(false)\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  return (\n    <>\n      <NavLink to='/change-password' className='nav-link' onClick={handleShow}>\n        Change Password\n      </NavLink>\n\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title className='changePass-modal-title'>Change Password</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Route path='/change-password' render={() => <ChangePassword closeModal={handleClose} />} />\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport default Modale\n","import React, { useState, useContext, createRef } from 'react'\nimport AppContext from '../../context/context'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { uploadPfp } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\n\nconst UploadImage = ({ closeModal }) => {\n  const { state, dispatch } = useContext(AppContext)\n  const { loggedIn } = state\n  const imageRef = createRef()\n  const onChangePfp = async (e) => {\n    e.preventDefault()\n    console.log(imageRef.current.files[0])\n    const uploadStatus = await uploadPfp(imageRef.current.files[0], state.userName)\n    console.log('upload status: ', uploadStatus)\n    if (uploadStatus.status === 200) {\n      toast.success('Profile image changed successfully!')\n      closeModal()\n      return true \n    } else {\n      toast.error('Failed to change profile image')\n      closeModal()\n      return false\n    }\n  }\n\n  return !loggedIn ? (\n    <Redirect to='/' />\n  ) : (\n    <div className='row sigin-parent-wrapper'>\n      <div className='sigin-form-wrapper'>\n          <Form className='signin-form' onSubmit={onChangePfp}>\n          <Form.Group>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\tname='image'\n\t\t\t\t\t\t\t\tid='imagePicker'\n\t\t\t\t\t\t\t\taccept='image/*'\n\t\t\t\t\t\t\t\tmultiple={false}\n\t\t\t\t\t\t\t\t//onChange={(e) => imagePicker(e)}\n\t\t\t\t\t\t\t\tref={imageRef}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button variant='primary' type='submit'>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n          </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default UploadImage","import React, { useState } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport { NavLink, Route } from 'react-router-dom'\nimport UploadImage from '../components/Main/UploadImage'\n\nconst UploadImageModal = ({title}) => {\n  const [show, setShow] = useState(false)\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  return (\n    <>\n      <NavLink to='/upload-image' className='nav-link' onClick={handleShow}>\n        Upload Image\n      </NavLink>\n\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header >\n          <Modal.Title className='changePass-modal-title'>Change Profile Image</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Route path='/upload-image' render={(event) => <UploadImage closeModal={handleClose} />} />\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport default UploadImageModal\n","import React, { useState , useContext} from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport { Dropdown, Modal } from 'react-bootstrap'\nimport AppContext from '../context/context'\nimport { deleteUser } from '../api/auth'\nimport { ALL_TYPES } from '../context/action-types'\n\n\nimport Modale from './Modal'\nimport UploadImageModal from './UploadImageModal'\nimport ChangePassword from '../components/auth/ChangePassword'\nimport { toast } from 'react-toastify'\n\n\nconst DropDown = ({user}) => {\n  const [show, setShow] = useState(false)\n  const { state, dispatch } = useContext(AppContext)\n  const { token } = state\n  const history = useHistory()\n\n  const handleDelete = async () => {\n    const result = await deleteUser(token)\n    if (result.status === 200) {\n      toast('Successfully deleted account!')\n      ALL_TYPES.forEach(action => {\n        dispatch({\n          type: action,\n          payload: null\n        })\n      })\n      history.push('/')\n    } else {\n      toast('Failed to delete account', {type: 'error'})\n    }\n  }\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  return (\n    <>\n    <Dropdown className='parent-dropdown-wrapper'>\n        <Dropdown.Toggle  className='dropdown-username'>\n          {user.userName}\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu className='dropdown-menu' >\n          {/* <NavLink to='/upload-image' className='nav-link'>\n            Upload image\n          </NavLink> */}\n          <UploadImageModal />\n          <Modale />\n          \n\n\t\t\t\t\t<Dropdown.Divider className='divider' />\n\t\t\t\t\t<NavLink to='/sign-out' className='nav-link'>\n\t\t\t\t\t\tSign Out\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<Dropdown.Divider className='divider' />\n\t\t\t\t\t<span\n\t\t\t\t\t\tonClick={() => handleDelete()}\n\t\t\t\t\t\tstyle={{ color: 'red', fontWeight: '800' }}\n\t\t\t\t\t\tclassName='nav-link'>\n\t\t\t\t\t\tDelete Account\n\t\t\t\t\t</span>\n\t\t\t\t</Dropdown.Menu>\n\t\t\t</Dropdown>\n\t\t</>\n\t)\n}\n\nexport default DropDown\n","import React, { Fragment, useContext } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Dropdown } from 'react-bootstrap'\n\nimport AppContext from '../../context/context'\nimport DropDown from '../../shared/DropDown'\n\nconst authenticatedOptions = (user) => {\n  return (\n    <>\n      <DropDown user={user}/>\n    </>\n  )\n}\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-in' className='link login'>\n      Login\n    </NavLink>\n    <NavLink to='/sign-up' className='link register'>\n      Register\n    </NavLink>\n  </Fragment>\n)\n\n// const alwaysOptions = (\n//   <Fragment>\n//     <NavLink exact to='/' className='nav-link'>Home</NavLink>\n//   </Fragment>\n// )\n\nconst Header = () => {\n  const { state, dispatch } = useContext(AppContext)\n  const user = state\n\n  return (\n    <div className='header-wrapper'>\n      <div className='logo-wrapper'>\n        <NavLink to='/' className='link'>\n          <span className='logo-text'>Oui Chat</span>\n        </NavLink>\n      </div>\n\n      <div className='links-group-1'>\n        {user.loggedIn ? authenticatedOptions(user) : unauthenticatedOptions}\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import { io } from 'socket.io-client'\nimport React, { useState, useEffect, useHistory, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AppContext from \"../../context/context\";\nimport apiUrl from '../../apiConfig';\nimport { toast } from 'react-toastify';\n\n\n\nconst MsgInput = ({received, room }) => {\n  const { state, dispatch } = useContext(AppContext)\n  const { loggedIn, userId, token, userName } = state\n\n  const [messageText, setMessageText] = useState('')\n  const [socket, setSocket] = useState(null)\n  const [connected, setConnected] = useState(false)\n  const [socketAuthed, setSocketAuthed] = useState(false)\n\n  // const receivedMessage = (msg) => {\n  //   received(msg)\n  //   console.log('received message')\n  //   console.log(msg)\n  // }\n\n  useEffect(() => {\n    if (connected) {\n      return\n    }\n    //console.log('connecting socket')\n    const socket = io(apiUrl, {\n\t\t\twithCredentials: false,\n\t\t\tquery: {\n\t\t\t\ttoken:\n\t\t\t\t\ttoken,\n\t\t\t},\n\t\t})\n    socket.on('connect', () => {\n      window.socket = socket\n      //console.log('connected!')\n    })\n    socket.on('loggedin', (res) => {\n      if (res) {\n        setSocketAuthed(true)\n        socket.on('message', received)\n        // socket.on('deleted', res => {\n        //   //console.log(res)\n        // })\n        socket.on('unauthorized', () => {\n          toast('Unauthorized', {type: 'error'})\n        })\n      } else {\n        //console.log('failed to log in')\n        toast('failed to log in')\n      }\n    })\n    setSocket(socket)\n    setConnected(true)\n\n  }, [])\n\n  // Join a room\n  // TODO\n  useEffect(() => {\n    //console.log('seeing this pop up here as well', room)\n    if (room) {\n      socket.emit('join', { roomId: room })\n    }\n  }, [room])\n\n  const sendMessage = (event) => {\n    event.preventDefault()\n    if (!socket) {\n      return\n    }\n    const msg = {\n\t\t\tmessage: messageText,\n\t\t\troomId: room,\n\t\t\ttimestamp: new Date().toLocaleString(),\n      userName: userName\n\t\t}\n    socket.emit('send-message', msg)\n    //console.log('sent message: ')\n    //console.log(msg)\n    setMessageText('')\n  }\n\n  return (\n\t\t<>\n\t\t\t{room !== '' ? \n          <form className='message-input-window' onSubmit={sendMessage}>\n            <input value={messageText} onChange={(e) => setMessageText(e.target.value)} className='message-input' />\n            <button type='submit' className='send-message'>Send</button>\n          </form>\n       : '' }\n    </>\n\t\t\n\t)\n  // Version requiring auth:\n  // return loggedIn\n  //     ? (<Redirect to='/' />)\n  //     : (\n  //       <div>\n  //         <input value={roomName} onChange={(e) => setRoomName(e.target.value)} />\n  //         <button onClick={createRoom} />\n  //       </div>\n  //     )\n}\n\nexport default MsgInput","import apiUrl from \"../apiConfig\"\nimport { ADD_CACHE } from \"../context/action-types\"\n\nexport const updateCache = async (serverUsers, cachedPfps, dispatch) => {\n  const storage = window.sessionStorage\n  const unCached = serverUsers.filter(user => !cachedPfps.some(id => id !== user._id))\n  try {\n    const cachePairs = await Promise.all(\n\t\t\tunCached.map(async (userObj) => {\n\t\t\t\tconst cacheObj = { userName: userObj.userName }\n\t\t\t\tconst response = await fetch(apiUrl + '/img/' + userObj.userName)\n\t\t\t\tconst type = response.headers.get('Content-Type')\n\t\t\t\tconst data = await response.arrayBuffer()\n\t\t\t\tcacheObj.data = bufferToString(type, data)\n\t\t\t\treturn cacheObj\n\t\t\t})\n\t\t)\n    const newCache = cachedPfps.length === 0\n      ? []\n      : [...cachedPfps]\n\t\tcachePairs.forEach((cacheObj) => {\n\t\t\tstorage.setItem(cacheObj.userName, cacheObj.data)\n\t\t\tnewCache.push(cacheObj.userName)\n\t\t})\n    dispatch({\n      type: ADD_CACHE,\n      payload: newCache\n    })\n    return true\n  } catch(err) {\n    console.error(err)\n    return false\n  }\n}\n\nexport const getPfp = (userName) => {\n  const storage = window.sessionStorage\n  let data = storage.getItem(userName)\n  return data ? data : apiUrl + '/img/' + userName\n}\n\nconst bufferToString = (type, arrayBuffer) => {\n  const prefix = `data:${type};base64,`\n  let binary = ''\n  const bytes = new Uint8Array(arrayBuffer)\n  bytes.forEach(byte => binary += String.fromCharCode(byte))\n  return prefix + window.btoa(binary)\n}\n\n// export const testCache = async (userName) => {\n//   const result = await fetch(apiUrl + '/img/' + userName)\n//   console.log('result headers:')\n//   console.log(result.headers)\n//   const buffer = await result.arrayBuffer()\n//   console.log(buffer)\n//   console.log('type:')\n//   const type = result.headers.get('Content-Type')\n//   console.log(type)\n//   const binary = bufferToString(type, buffer)\n//   console.log(binary)\n// }","import React from 'react'\nimport apiUrl from '../../apiConfig'\nimport { getPfp } from '../../shared/updateCache'\n\nconst timeStampStyle = {\n\tcolor: 'rgba(123, 115, 115, .85)',\n}\n\nconst Message = (props) => {\n\t//console.log('imgurl:')\n\tconst imgUrl = apiUrl + '/img/' + props.userName\n\t//console.log(imgUrl)\n  return (\n\t\t<div className='message-layout'>\n\t\t\t<img col='1' className='userImage' src={getPfp(props.userName)} />\n\t\t\t<li col='2'>\n\t\t\t\t<strong>{props.userName}</strong> <a style={timeStampStyle}>{props.timestamp}</a>:\n\t\t\t\t<br />\n\t\t\t\t<section className='message-text'>{props.text}</section>\n\t\t\t\t{/* <a>\n\t\t\t\t\t<i className='fab fa-thumbs-up'></i>\n\t\t\t\t</a>\n\t\t\t\t<a>\n\t\t\t\t\t<i className='fab fa-thumbs-down'></i>\n\t\t\t\t</a>\n\t\t\t\t<a>\n\t\t\t\t\t<i className='fab fa-smile'></i>\n\t\t\t\t</a>\n\t\t\t\t<a>\n\t\t\t\t\t<i className='fab fa-heart'></i>\n\t\t\t\t</a>\n\t\t\t\t<a>\n\t\t\t\t\t<i className='fab fa-sad-tear'></i>\n\t\t\t\t</a> */}\n\t\t\t</li>\n\t\t</div>\n\t)\n}\n\n\nexport default Message","import React, { useEffect } from 'react'\n\nconst RoomTitle = ({ room }) => {\n\n  useEffect(() => {\n    //console.log('in room: ', room)\n  }, [room])\n\n  return (\n    <>\n      {room ? \n        <h3 className='room-title'>{room}</h3>\n        :\n        ''\n      }\n    </>\n  )\n}\n\nexport default RoomTitle\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n// import React, { useContext } from 'react'\n// import AppContext from '../context/context'\n\nconst createRoom = (roomName, id, token) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/create-room',\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: {\n      room: {\n        name: roomName\n      },\n      userId: id\n    }\n  })\n}\n\nexport default createRoom\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nconst showRooms = (token) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/show-rooms',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n}\n\nexport default showRooms\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nconst goOffline = (token) => {\n  return axios({\n    method: 'DELETE',\n    url: apiUrl + '/go-offline',\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n  })\n}\n\nexport default goOffline\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nconst showServerUsers = (token) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/show-server-users',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n}\n\nexport default showServerUsers\n","import React, { useEffect } from 'react'\nimport apiUrl from '../apiConfig'\nimport { getPfp } from './updateCache'\n\n\nconst ServerUser = ({ name, status, add, userId }) => {\n  const imgUrl = apiUrl + '/img/' + name\n  useEffect(() => {\n    \n  }, [status])\n\n  return (\n\t\t<>\n\t\t\t<img col='1' className='user-image' src={getPfp(name)}></img>\n\n\t\t\t<span className='user-name'>{name}</span>\n\t\t\t<span className='user-status'>\n\t\t\t\t{status === 'online' ? (\n\t\t\t\t\t<img src='https://icongr.am/octicons/rss.svg?size=16&color=36ba38' />\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</span>\n      <img\n\t\t\t\tsrc={'https://icongr.am/octicons/plus.svg?size=16&color=b3b3b3'}\n\t\t\t\tonClick={() => add(userId)}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nexport default ServerUser ","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n// import React, { useContext } from 'react'\n// import AppContext from '../context/context'\n\nconst addUserToRoom = (roomId, userId, token) => {\n\treturn axios({\n\t\tmethod: 'POST',\n\t\turl: apiUrl + '/add-user-to-room',\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t},\n\t\tdata: {\n\t\t\troomId: roomId,\n\t\t\tuserId: userId,\n\t\t},\n\t})\n}\n\nexport default addUserToRoom\n","import React, { useEffect, useState, useContext } from 'react'\nimport AppContext from '../context/context'\nimport { SET_SERVER_USERS } from '../context/action-types'\nimport ShowServerUsers from '../api/ShowServerUsers'\nimport ServerUser from './ServerUser'\nimport addUserToRoom from '../api/addUser'\nimport { toast } from 'react-toastify'\n\nconst ServerUserSideBar = ({currentRoom}) => {\n  const { state, dispatch } = useContext(AppContext)\n  const { serverUsers, token } = state\n  const [serverUsersJSX, setServerUsersJSX] = useState(null)\n\n  // useEffect(async () => {\n  //   let usersArray\n  //   const response = await ShowServerUsers(token)\n  //   console.log('users array : ', response.data.user)\n  //   usersArray = response.data.user\n  //   await dispatch({\n  //     type: SET_SERVER_USERS,\n  //     payload: usersArray\n  //   })\n    \n    \n  // }, []);\n\n  const addUser = async (userId) => {\n    if (!currentRoom || currentRoom === '') {\n      toast('Please select a room in order to add users.')\n      return\n    }\n    const res = await addUserToRoom(currentRoom, userId, token)\n    if (res.status === 201) {\n      toast('User successfully added to room!', {type: 'success'})\n      return\n    } else {\n      toast('You may not add a user to that room.', {type: 'error'})\n      return\n    }\n  }\n\n  const updateUsers = async () => {\n    // console.log('updating users...')\n    let usersArray\n    const response = await ShowServerUsers(token)\n    // console.log('users array : ', response.data.user)\n    usersArray = response.data.user\n    await dispatch({\n      type: SET_SERVER_USERS,\n      payload: usersArray\n    })\n  }\n\n  useEffect(() => {\n    updateUsers()\n    // const intervalId = setInterval(updateUsers, 5000)\n    // window.intervalId = intervalId\n  }, [])\n\n  useEffect(async () => {\n    //console.log('server users: ', serverUsers)\n    if (serverUsers) {\n      setServerUsersJSX(serverUsers.map(user => (\n        <li key={user._id} className='user-list-item'>\n          <ServerUser name={user.userName} userId={user._id} add={addUser} status={user.status} />\n        </li>\n      )))\n    }\n  }, [serverUsers])\n\n  return (\n      <ul className='user-list'>\n        {serverUsersJSX}\n      </ul>\n  )\n}\n\nexport default ServerUserSideBar","import React, { useState } from 'react'\nimport { Modal, Button, Form } from 'react-bootstrap'\n// {setRoomName, onCreateRoom, roomName }\n\nconst ModaleCreateRoom = ({setRoomName, onCreateRoom, roomName }) => {\n  console.log(\"props\", \"sasasaddsdasdasdsad mainContent\");\n  const [show, setShow] = useState(false)\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  return (\n    <>\n        <Button className='create-room-button' onClick={handleShow}>\n            <span className='create-room-span'>+</span>\n        </Button>\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title className='createRoom-modal-title'>Create Room</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={(event)=> onCreateRoom(event,handleClose) }>\n            <Form.Group controlId='room-name'>\n              <Form.Control\n                required\n                type='room-name'\n                name='create-room'\n                value={roomName}\n                placeholder='Enter Room Name'\n                onChange={(e) => setRoomName(e.target.value)}\n              />\n              <button type='submit' className='create-button'>Create</button>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport default ModaleCreateRoom\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nconst messageHistory = async (token, roomId) => {\n\tconst response = await axios({\n\t\tmethod: 'GET',\n\t\turl: apiUrl + '/room/' + roomId,\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t},\n\t})\n  if (response.data.length === 0) {\n    return null\n  }\n  return response.data\n}\n\nexport default messageHistory\n","import React, { useContext, useEffect, useState, createRef } from 'react' \nimport { Link } from 'react-router-dom'\nimport AppContext from '../../context/context'\nimport { Container, Row, Col, Form, DropdownButton, ButtonGroup, Button } from 'react-bootstrap'\nimport Input from './MsgInput'\nimport Message from './MessageJSX'\nimport RoomTitle from './RoomTitle'\nimport createRoom from '../../api/CreateRoom'\nimport showRooms from '../../api/ShowRooms'\nimport showRoomUsers from '../../api/ShowRoomUsers'\nimport goOffline from '../../api/GoOffline'\nimport { SET_ROOMS_ID } from '../../context/action-types'\nimport ServerUserSideBar from '../../shared/ServerUsersSideBar'\nimport ModaleCreateRoom from '../../shared/CreateRoomModal'\nimport { updateCache, getPfp } from '../../shared/updateCache'\nimport messageHistory from '../../api/messageHistory'\nimport { toast, ToastContainer } from 'react-toastify'\n\nconst AlwaysScrollToBottom = () => {\n\tconst elementRef = createRef()\n\tuseEffect(() => elementRef.current.scrollIntoView({behavior: 'smooth'}))\n\treturn <div ref={elementRef} />\n}\n\nconst MainContent = () => {\n  const { state, dispatch } = useContext(AppContext)\n\n  const [messages, setMessages] = useState([])\n  const [components, setComponents] = useState([])\n  const [newMessageObj, setNewMessageObj] = useState(null)\n  const [roomName, setRoomName] = useState('')\n  const { rooms, userId, token, serverUsers, cachedPfps } = state\n  const [roomsJSX, setRoomsJSX] = useState(null)\n  const [roomUsersJSX, setRoomUsersJSX] = useState(null)\n  const [currentRoom, setCurrentRoom] = useState('')\n  const [changedRoom, setChangedRoom] = useState('')\n  const [currentRoomName, setCurrentRoomName] = useState('')\n  const [changedRoomName, setChangedRoomName] = useState('')\n\n  useEffect(() => {\n    if (!serverUsers || serverUsers.length === 0) {\n      return\n    }\n    updateCache(serverUsers, cachedPfps, dispatch).then(\n\t\t\t(result) => {\n\t\t\t\tif (result) {\n\t\t\t\t\t////console.log(getPfp('12345'))\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('failed to cache images')\n\t\t\t\t}\n\t\t\t}\n\t\t)\n  }, [serverUsers])\n\n  const changeRoom = (roomId, roomName) => {\n    ////console.log('changing room to: ', roomId)\n    setChangedRoom(roomId)\n    setChangedRoomName(roomName)\n  }\n\n  const handleDelete = (roomId) => {\n    ////console.log(roomId)\n    if (roomId) {\n      toast('Successfully deleted room!', {type: 'success'})\n      const newRooms = rooms.filter(room => room._id !== roomId)\n      dispatch({\n        type: SET_ROOMS_ID,\n        payload: newRooms\n      })\n    } else {\n      toast('You may not delete that room.', {type: 'error'})\n    }\n    window.socket.removeEventListener('deleted', handleDelete)\n  }\n\n  const deleteRoom = (roomId) => {\n    const data = {\n      roomId: roomId,\n\t\t\ttimestamp: new Date().toLocaleString(),\n      userId: userId\n    }\n    window.socket.emit('delete-room', data)\n    window.socket.addEventListener('deleted', handleDelete)\n  }\n\n  const showActiveUsers = async () => {\n      let usersArray\n      const response = await showRoomUsers(token, currentRoom)\n      usersArray = response.data.user\n      return usersArray\n  }\n\n  useEffect(() => {\n    //console.log('room has been changed')\n    if (changedRoom === currentRoom) {\n      return\n    } else {\n      //console.log('changed room: ', changedRoom)\n      setMessages([])\n      setCurrentRoom(changedRoom)\n      setCurrentRoomName(changedRoomName)\n      // showActiveUsers()\n      //   .then(usersArray => {\n      //     setRoomUsersJSX(usersArray.map(user => (\n      //       <li>{`${ user.name }`}</li>\n      //     )))})\n    }\n  }, [changedRoom])\n\n  useEffect(() => {\n    if (currentRoom !== '') {\n    messageHistory(token, currentRoom)\n      .then(response => {\n        //console.log('MESSAGE HISTORY')\n        if (!response) {\n          return\n        }\n        const messageObjs = response.map(message => ({\n          userName: message.userName,\n          timestamp: message.sentAt,\n          message: message.text\n        }))\n        //console.log('FETCHED HISTORY')\n        ////console.log(messageObjs)\n        setMessages(messageObjs)\n      })\n    }\n  }, [currentRoom])\n\n  useEffect(() => {\n    if (rooms?.length > 0) {\n      setRoomsJSX(rooms.map(room => (\n        <li className='room-list-item' key={`${room._id}`}>\n          <a href='#' className='room-name-link' onClick={() => changeRoom(room._id, room.name)}>{`${room.name}`}</a>\n          <img className='trash' src=\"https://icongr.am/octicons/trash.svg?size=16&color=FFFFFF\" onClick={() => deleteRoom(room._id) } />\n        </li>\n      )))\n    }\n  }, [rooms])\n\n  const updateRooms = async () => {\n    //console.log('updateRooms called')\n    let newArray = []\n\t\tconst response = await showRooms(token)\n\t\tconst existingRooms = response.data.room\n\t\t////console.log('existing rooms: ', existingRooms, 'saved rooms: ', rooms)\n\t\texistingRooms.forEach((existingRoom) => {\n\t\t\tif (existingRoom.validUsers.includes(userId)) {\n\t\t\t\tnewArray.push(existingRoom)\n\t\t\t}\n\t\t})\n\t\tdispatch({\n\t\t\ttype: SET_ROOMS_ID,\n\t\t\tpayload: newArray,\n\t\t})\n  }\n\n  useEffect(async () => {\n    //console.log('running once:')\n    updateRooms()\n    const roomIntervalId = setInterval(updateRooms, 5000)\n    window.roomIntervalId = roomIntervalId\n    window.addEventListener(\"beforeunload\", () => {\n      goOffline(token, userId)\n    }, false);\n  }, [])\n\n  const onCreateRoom = async (event, func) => {\n    event.preventDefault()\n    let newArray = []\n    const room = await createRoom(roomName, userId, token)\n    if (rooms.length > 0) {\n        func()\n\n      newArray = [...rooms]\n      newArray.push(room.data.room)\n    } else {\n      newArray = [room.data.room]\n    }\n    dispatch({\n      type: SET_ROOMS_ID,\n      payload: newArray\n    })\n    // state.rooms.push(room.data.room)\n  }\n\n  const newMessage = (msg) => {\n    setNewMessageObj(msg)\n  }\n\n  useEffect(() => {\n    if (!newMessageObj) {\n      return\n    }\n    const newArr = [...messages]\n    newArr.push(newMessageObj)\n    setMessages(newArr)\n    setNewMessageObj(null)\n  }, [newMessageObj])\n\n  useEffect(() => {\n    setComponents(messages.map((message, i) => (\n      <Message \n        userName={message.userName}\n        timestamp={message.timestamp}\n        text={message.message}\n        key={message.userName + i.toString()}\n      />\n    )))\n  }, [messages])\n\n  return (\n\t\t<Container className='main-container'>\n\t\t\t{/* Second row - will contain rooms/DMs as well as main content */}\n\t\t\t<Row className='top-row'>\n\t\t\t\t<Col className='col-3 left-side-options'>\n          <h3 className='room-title-alt'>\n            <RoomTitle room={currentRoomName} />\n          </h3>\n\t\t\t\t\t<div className='left-side-nav'>\n\t\t\t\t\t\t<Row className='room-top-level'>\n\t\t\t\t\t\t\t\t<div className='rooms-div'>\n\t\t\t\t\t\t\t\t\t<h4 className='roomsHeader'>\n\t\t\t\t\t\t\t\t\t\tRooms\n\t\t\t\t\t\t\t\t\t</h4>\n\n\n                  <ModaleCreateRoom\n\t\t\t\t\t\t\t\t\t\t\tonCreateRoom={onCreateRoom}\n\t\t\t\t\t\t\t\t\t\t\troomName={roomName}\n\t\t\t\t\t\t\t\t\t\t\tsetRoomName={setRoomName}\n\t\t\t\t\t\t\t\t\t/>\n\n                  \n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* <Button className='create-room-button m-3'> Create Room</Button> */}\n\n\t\t\t\t\t\t\t\t{/* <Dropdown.Item eventKey='1' as='form' > */}\n\n\t\t\t\t\t\t\t\t{/* <Form onSubmit={onCreateRoom} className='d-none'>\n                      <Form.Group controlId='room-name'>\n                        <Form.Control \n                        required\n                        type='room-name' \n                        name='create-room'\n                        value={roomName}\n                        placeholder='Enter Room Name'\n                        onChange={(e) => setRoomName(e.target.value)} \n                        />\n                        <button type='submit'>Create</button>\n                      </Form.Group>\n                  </Form> */}\n\n\n\n                 \n                {/* </Dropdown.Item> */}\n              \n              \n            </Row>\n\n           \n\n            <Row>\n              {/* TODO: Make this into its own component */}\n              <section className='open-rooms'>\n                <ul className='room-list'>\n                  {roomsJSX}\n                </ul>\n              </section>\n            </Row>\n          </div>\n          {/* Ayoub this is your spot to add active users */}\n            <Row className='active-users'>\n                <h4 className='roomsHeader'>Users</h4>\n                <ServerUserSideBar currentRoom={currentRoom} />\n            </Row>\n        </Col>\n        <Col className='main-content col-9'>\n          <Row>\n            <RoomTitle room={currentRoomName} />\n          </Row>\n            <section className='messages-window'>\n              <ul className='messages'>\n                {currentRoom ? components : <li className='filler-text' > <div className='filler'>No room selected. Please join a room to start a conversation!</div></li>}\n                <AlwaysScrollToBottom />\n              </ul>\n            </section>\n            <Input received={newMessage} room={currentRoom} />\n            {/* <form className='message-input-window'>\n              <input className='message-input' />\n              <button className='send-message'>Send</button>\n            </form> */}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t)\n}\n\nexport default MainContent\n","import React, { useState, useContext, createRef } from 'react'\nimport { Redirect, withRouter } from 'react-router-dom'\nimport AppContext from '../../context/context'\nimport { SET_TOKEN, SET_USER_ID } from '../../context/action-types'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport { signUp, signIn, uploadPfp } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst imgConfig = {\n\tquality: 0.2,\n\tmaxWidth: 800,\n\tmaxHeight: 600,\n\tautoRotate: true,\n}\n\nconst SignUp = () => {\n    const { state, dispatch } = useContext(AppContext)\n    const { loggedIn } = state\n    const history = useHistory()\n    const [email, setEmail] = useState('')\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [passConfirm, setPassConfirm] = useState('')\n    const imageRef = createRef()\n\n    const onSignUp = async (e) => {\n        e.preventDefault()\n        //console.log(imageRef.current)\n        //console.log(imageRef.current.files)\n        //let resizedImage = await readAndCompressImage(imageRef.current.files[0], imgConfig)\n        // const data = new FormData(e.target)\n        const file = imageRef.current.files[0]\n        const type = file.name.split('.').pop()\n        //console.log(type)\n        const apiObj = {\n            email: email,\n            userName: username,\n            password: password,\n            passwordConfirmation: passConfirm,\n        }\n        signUp(apiObj)\n            .then(() => signIn(apiObj))\n            .then((res) => {\n                uploadPfp(imageRef.current.files[0], res.data.user.userName)\n                dispatch({\n                    type: SET_USER_ID,\n                    payload: res.data.user._id\n                })\n                dispatch({\n                    type: SET_TOKEN,\n                    payload: res.data.user.token\n                })\n            })\n            .then(() =>{\n                toast(`User ${username} successfully created!`, {type: 'success'})\n            })\n            .then(() => history.push('/'))\n            .catch((error) => {\n                setEmail('')\n                setUsername('')\n                setPassword('')\n                setPassConfirm('')\n                // toast error here\n            })\n        }\n\n    return loggedIn ? (\n\t\t\t<Redirect to='/' />\n\t\t) : (\n\t\t\t<div className='row signup-parent-wrapper'>\n\t\t\t\t<div className='signup-form-wrapper'>\n\t\t\t\t\t<h3 className='signup-header3'>Sign Up</h3>\n\t\t\t\t\t<Form className='signup-form' onSubmit={onSignUp}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\ttype='username'\n\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\tplaceholder='Enter username'\n\t\t\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password Confirmation</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tname='passwordConfirmation'\n\t\t\t\t\t\t\t\tvalue={passConfirm}\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder='Confirm Password'\n\t\t\t\t\t\t\t\tonChange={(e) => setPassConfirm(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Profile Picture</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\tname='image'\n\t\t\t\t\t\t\t\tid='imagePicker'\n\t\t\t\t\t\t\t\taccept='image/*'\n\t\t\t\t\t\t\t\tmultiple={false}\n\t\t\t\t\t\t\t\t//onChange={(e) => imagePicker(e)}\n\t\t\t\t\t\t\t\tref={imageRef}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button variant='primary' type='submit'>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n}\n\nexport default SignUp\n","import React, { useContext, useState } from 'react'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport AppContext from '../../context/context'\n\nimport { toast, ToastContainer } from 'react-toastify'\nimport { SET_TOKEN, SET_USER_ID, SET_SIGNEDIN, SET_USERNAME, SET_ROOMS_ID } from '../../context/action-types'\nimport { signIn } from '../../api/auth'\nimport { Form, Button } from 'react-bootstrap'\n\n\nconst SignIn = () => {\n    const { state, dispatch } = useContext(AppContext)\n    const { loggedIn } = state\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const onSignIn = (event) => {\n      event.preventDefault()\n\n      const signInObj = {\n          userName: username,\n          password: password\n      }\n\n      signIn(signInObj)\n        .then((res) => {\n            // console.log('login response: ')\n            // console.log(res.data, 'state: ', state)\n            dispatch({\n                type: SET_USER_ID,\n                payload: res.data.user._id\n            })\n            dispatch({\n                type: SET_TOKEN,\n                payload: res.data.user.token\n            })\n            dispatch({\n                type: SET_SIGNEDIN,\n                payload: true\n            })\n            dispatch({\n                type: SET_USERNAME,\n                payload: res.data.user.userName\n            })\n            dispatch({\n                type: SET_ROOMS_ID,\n                payload: res.data.user.rooms\n            })\n        })\n        // .then(() =>{\n        //   // toast alert here\n        // })\n        // .then(() => history.push('/'))\n        .catch((error) => {\n          console.log(error)\n          // setUsername('')\n          // setPassword('')\n          //error toast here\n          toast.error('incorrect username or password', {\n            position: \"bottom-center\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            })\n        })\n    }\n\n\n  return (\n      loggedIn ? <Redirect to='/' /> :\n    <div className='row signin-parent-wrapper'>\n      <div className='signin-form-wrapper'>\n        <h3 className=\"signin-header3\">Login</h3>\n        <Form onSubmit={onSignIn} className=\"signin-form\">\n          <Form.Group controlId='username'>\n            <Form.Label className=\"label-username\">Username</Form.Label>\n            <Form.Control\n              required\n              type='username'\n              name='username'\n              value={username}\n              placeholder='Enter username'\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import { useContext, useEffect } from 'react'\nimport { useHistory, Redirect } from 'react-router-dom'\nimport AppContext from '../../context/context'\nimport { ALL_TYPES } from '../../context/action-types'\nimport { signOut } from '../../api/auth'\n\n\nconst SignOut = () => {\n    const { state, dispatch } = useContext(AppContext)\n    const history = useHistory()\n    const { loggedIn, token } = state\n\n    useEffect(() => {\n        clearInterval(window.intervalId)\n        clearInterval(window.roomIntervalId)\n        if (!loggedIn) {\n            return\n        }\n        signOut(token)\n            .finally(() => {\n                // success toast here\n            })\n            .finally(() => {\n                ALL_TYPES.forEach((type) => {\n                    //console.log(type)\n                    dispatch({\n                        type: type,\n                        payload: null,\n                    })\n                })\n            })\n            .finally(() => history.push('/'))\n    }, [])\n\n    return !loggedIn ? <Redirect to='/' /> : null\n}\n\nexport default SignOut\n","import React, { useEffect, useReducer } from 'react'\nimport { Route } from 'react-router-dom'\nimport AppContext from './context/context'\nimport reducer from './context/reducer'\nimport { ToastContainer } from 'react-toastify'\n\nimport Header from './components/Header/Header'\nimport MainContent from './components/Main/MainContent'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nconst initialState = {\n    loggedIn: false,\n    userId: null,\n\t\tuserName: null,\n    token: null,\n    shouldSaveState: false,\n\t\tuserName: null,\n\t\trooms: [],\n\t\tserverUsers: [],\n\t\tcachedPfps: []\n}\n\nconst App = () => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n\t\t\n    return (\n\t\t\t\t<AppContext.Provider value={{ state, dispatch }}>\n\t\t\t\t\t<ToastContainer />\n\t\t\t\t\t<Header />\n\t\t\t\t\t<main className='container'>\n\t\t\t\t\t\t<Route path='/sign-up' component={SignUp} />\n\t\t\t\t\t\t<Route path='/sign-in' component={SignIn} />\n\t\t\t\t\t\t<Route path='/sign-out' component={SignOut} />\n            {/* Change Password is running in shared/Modal component */}\n\t\t\t\t\t</main>\n\t\t\t\t\t\n\t\t\t\t\t{state.loggedIn ? <MainContent /> : ''}\n\t\t\t\t</AppContext.Provider>\n\t\t)\n  }\n\n\nexport default App\n\n// add bill and hanif","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}