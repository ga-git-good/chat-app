{"version":3,"sources":["context/context.js","context/action-types.js","context/reducer.js","apiConfig.js","api/auth.js","components/auth/ChangePassword.js","shared/Modal.js","shared/DropDown.js","components/Header/Header.js","components/Main/MsgInput.js","components/Main/MessageJSX.js","components/Main/RoomTitle.js","api/CreateRoom.js","api/ShowRooms.js","components/Main/MainContent.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","App.js","index.js"],"names":["AppContext","createContext","SET_USERNAME","SET_USER_ID","SET_TOKEN","SET_SIGNEDIN","SET_ROOMS_ID","SAVE_STATE","ALL_TYPES","state","action","type","payload","userName","userId","token","loggedIn","rooms","shouldSaveState","apiUrls","apiUrl","window","location","hostname","uploadPfp","file","a","buffer","console","log","formData","FormData","append","options","method","body","fetch","signIn","credentials","axios","url","data","password","ChangePassword","closeModal","useContext","history","dispatch","useHistory","useState","oldPassword","setOldPassword","newPassword","setNewPassword","className","Form","Group","controlId","Label","Control","required","name","value","placeholder","onChange","e","target","Button","variant","onClick","passwords","headers","Authorization","old","new","changePassword","then","response","props","push","catch","error","to","Modale","show","setShow","handleClose","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","path","render","DropDown","user","Dropdown","Toggle","Menu","Divider","authenticatedOptions","unauthenticatedOptions","MsgInput","received","room","messageText","setMessageText","socket","setSocket","connected","setConnected","setSocketAuthed","useEffect","io","withCredentials","query","on","res","alert","emit","roomId","onSubmit","event","preventDefault","msg","message","timestamp","Date","toLocaleString","timeStampStyle","color","Message","imgUrl","col","src","style","text","RoomTitle","createRoom","roomName","id","showRooms","AlwaysScrollToBottom","elementRef","createRef","current","scrollIntoView","behavior","ref","MainContent","messages","setMessages","components","setComponents","newMessageObj","setNewMessageObj","setRoomName","roomsJSX","setRoomsJSX","currentRoom","setCurrentRoom","changedRoom","setChangedRoom","currentRoomName","setCurrentRoomName","changedRoomName","setChangedRoomName","map","href","changeRoom","_id","newArray","existingRooms","forEach","existingRoom","validUsers","includes","onCreateRoom","length","newArr","i","toString","Container","Row","Col","DropdownButton","as","ButtonGroup","drop","title","SignUp","email","setEmail","username","setUsername","setPassword","passConfirm","setPassConfirm","imageRef","onSignUp","files","split","pop","apiObj","passwordConfirmation","password_confirmation","pfpType","accept","multiple","SignIn","SignOut","signOut","finally","initialState","App","useReducer","reducer","Provider","component","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.def1f86a.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst AppContext = createContext()\n\nexport default AppContext\n","export const SET_USERNAME = 'SET_USERNAME'\nexport const SET_USER_ID = 'SET_USER_ID'\nexport const SET_TOKEN = 'SET_TOKEN'\nexport const SET_SIGNEDIN = 'SET_SIGNEDIN'\nexport const SET_ROOMS_ID = 'SET_ROOMS_ID'\nexport const SAVE_STATE = 'SET_STATE'\n\nexport const ALL_TYPES = [\n    SET_USERNAME,\n    SET_USER_ID,\n    SET_TOKEN,\n    SET_SIGNEDIN,\n    SET_ROOMS_ID,\n    SAVE_STATE,\n]","import {\n    SET_USERNAME,\n    SET_USER_ID,\n    SET_TOKEN,\n    SET_SIGNEDIN,\n    SAVE_STATE,\n    SET_ROOMS_ID\n} from './action-types'\n\nexport default (state, action) => {\n    switch (action.type) {\n        case SET_USERNAME:\n            return action.payload === null\n                ? {...state, userName: null}\n                : {...state, userName: action.payload}\n        case SET_USER_ID:\n            return action.payload === null\n                ? {...state, userId: null}\n                : {...state, userId: action.payload}\n        case SET_USER_ID:\n            return action.payload === null\n                ? {...state, userId: null}\n                : {...state, userId: action.payload}\n        case SET_TOKEN:\n            return action.payload === null\n                ? {...state, token: null}\n                : {...state, token: action.payload}\n        case SET_SIGNEDIN:\n            return action.payload === null\n                ? {...state, loggedIn: false}\n                : {...state, loggedIn: action.payload}\n        case SET_ROOMS_ID:\n            return action.payload === null\n                ? {...state, rooms: null}\n                : {...state, rooms: action.payload}\n        case SAVE_STATE:\n            return action.payload === null\n                ? {...state, shouldSaveState: false}\n                : {...state, shouldSaveState: action.payload}\n        default:\n            return state\n    }\n}","let apiUrl\nconst apiUrls = {\n\tproduction: 'https://gg-chat-api.herokuapp.com',\n\tdevelopment: 'http://localhost:3040',\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  //console.log(credentials)\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation,\n        userName: credentials.userName,\n        pfpType: credentials.pfpType\n      }\n    },\n  })\n}\n\nexport const uploadPfp = async (file, userName) => {\n  const buffer = file\n  console.log('buffer:')\n  console.log(buffer)\n  //console.log(buffer)\n  const formData = new FormData()\n\tformData.append('pfp', buffer)\n  const options = {\n\t\tmethod: 'POST',\n\t\tbody: formData,\n\t}\n  console.log(options)\n\treturn fetch(apiUrl + '/upload/' + userName, options)\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        userName: credentials.userName,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (token) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, token) => {\n  console.log(passwords, token,\"Hello thereerer\");\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.old,\n        new: passwords.new,\n      }\n    }\n  })\n}\n","import React, { useState, useContext } from 'react'\nimport AppContext from '../../context/context'\nimport { Redirect, useHistory } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport \"../../all-styles/ChangePass.scss\"\n\nconst ChangePassword = ({closeModal}) => {\n    const {state, dispatch} = useContext(AppContext)\n    const history = useHistory()\n    const { loggedIn, token } = state\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n\n    const onChangePassword = () => {\n\n        const passwords = {\n            old: oldPassword,\n            new: newPassword\n        }\n    changePassword(passwords, token)\n        .then((response) =>{\n        closeModal()\n        // put toast here\n        \n        console.log(props,  \"kaskdakddkadasndakdaksdkandakdsd\");\n        \n        })\n        .then(() => history.push('/'))\n        .catch((error) => {\n        setNewPassword('')\n        setOldPassword('')\n        //Failure toast here\n        \n        })\n    }\n\n    return (\n        !loggedIn ? <Redirect to='/' /> :\n        <div className='row changePass-parent-wrapper '>\n        <div className='changePass-form-wrapper'>\n            <Form className=\"changePass-form\" >\n            <Form.Group controlId='oldPassword'>\n                <Form.Label>Old password</Form.Label>\n                <Form.Control\n                required\n                name='oldPassword'\n                value={oldPassword}\n                type='password'\n                placeholder='Old Password'\n                onChange={(e) => setOldPassword(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Group controlId='newPassword'>\n                <Form.Label>New Password</Form.Label>\n                <Form.Control\n                required\n                name='newPassword'\n                value={newPassword}\n                type='password'\n                placeholder='New Password'\n                onChange={(e) => setNewPassword(e.target.value)}\n                />\n            </Form.Group>\n            <Button variant='primary' type='button' onClick={onChangePassword}>Submit</Button>\n            </Form>\n        </div>\n        </div>\n    )\n}\n\nexport default ChangePassword\n","import React, { useState } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport { NavLink, Route } from 'react-router-dom'\nimport ChangePassword from '../components/auth/ChangePassword'\nimport '../all-styles/Modal.scss'\n\nconst Modale = () => {\n  const [show, setShow] = useState(false)\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  return (\n    <>\n      <NavLink to='/change-password' className='nav-link' onClick={handleShow}>\n        Change Password\n      </NavLink>\n\n      <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title className='changePass-modal-title'>Change Password</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Route path='/change-password' render={() => <ChangePassword closeModal={handleClose} />} />\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport default Modale\n","import React, { useState ,Fragment} from 'react'\nimport { NavLink, Route } from 'react-router-dom'\nimport { Dropdown, Modal } from 'react-bootstrap'\n\nimport \"../all-styles/DropDown.scss\"\nimport Modale from './Modal'\nimport ChangePassword from '../components/auth/ChangePassword'\n\n\nconst DropDown = ({user}) => {\n  const [show, setShow] = useState(false)\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  return (\n    <>\n    <Dropdown className='parent-dropdown-wrapper'>\n        <Dropdown.Toggle  className='dropdown-username'>\n          {user.userName}\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu className='dropdown-menu' >\n          <NavLink to='/' className='nav-link'>\n            Upload image\n          </NavLink>\n\n          <Modale/>\n\n\n          <Dropdown.Divider className='divider'/>\n          <NavLink to='/sign-out' className='nav-link'>\n            Sign Out\n          </NavLink>\n        </Dropdown.Menu>\n      </Dropdown>\n\n\n    \n    </>\n  )\n}\n\nexport default DropDown\n","import React, { Fragment, useContext } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Dropdown } from 'react-bootstrap'\n\nimport '../../all-styles/Header.scss'\nimport AppContext from '../../context/context'\nimport DropDown from '../../shared/DropDown'\n\nconst authenticatedOptions = (user) => {\n  return (\n    <>\n      <DropDown user={user}/>\n    </>\n  )\n}\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-in' className='link login'>\n      Login\n    </NavLink>\n    <NavLink to='/sign-up' className='link register'>\n      Register\n    </NavLink>\n  </Fragment>\n)\n\n// const alwaysOptions = (\n//   <Fragment>\n//     <NavLink exact to='/' className='nav-link'>Home</NavLink>\n//   </Fragment>\n// )\n\nconst Header = () => {\n  const { state, dispatch } = useContext(AppContext)\n  const user = state\n\n  return (\n    <div className='header-wrapper'>\n      <div className='logo-wrapper'>\n        <NavLink to='/' className='link'>\n          <span className='logo-text'>Chat APP</span>\n        </NavLink>\n      </div>\n\n      <div className='links-group-1'>\n        {user.loggedIn ? authenticatedOptions(user) : unauthenticatedOptions}\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import { io } from 'socket.io-client'\nimport React, { useState, useEffect, useHistory, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AppContext from \"../../context/context\";\n\nconst MsgInput = ({received, room}) => {\n  const { state, dispatch } = useContext(AppContext)\n  const { loggedIn, userId, token, userName } = state\n\n  const [messageText, setMessageText] = useState('')\n  const [socket, setSocket] = useState(null)\n  const [connected, setConnected] = useState(false)\n  const [socketAuthed, setSocketAuthed] = useState(false)\n\n  // const receivedMessage = (msg) => {\n  //   received(msg)\n  //   console.log('received message')\n  //   console.log(msg)\n  // }\n\n  useEffect(() => {\n    if (connected) {\n      return\n    }\n    console.log('connecting socket')\n    const socket = io('localhost:3040', {\n\t\t\twithCredentials: false,\n\t\t\tquery: {\n\t\t\t\ttoken:\n\t\t\t\t\ttoken,\n\t\t\t},\n\t\t})\n    socket.on('connect', () => {\n      console.log('connected!')\n    })\n    socket.on('loggedin', (res) => {\n      if (res) {\n        setSocketAuthed(true)\n        socket.on('message', received)\n      } else {\n        console.log('failed to log in')\n        alert('failed to log in')\n      }\n    })\n    setSocket(socket)\n    setConnected(true)\n\n  }, [])\n\n  // Join a room\n  // TODO\n  useEffect(() => {\n    console.log('seeing this pop up here as well', room)\n    if (room) {\n      socket.emit('join', { roomId: room })\n    }\n  }, [room])\n\n  const sendMessage = (event) => {\n    event.preventDefault()\n    if (!socket) {\n      return\n    }\n    const msg = {\n\t\t\tmessage: messageText,\n\t\t\troomId: room,\n\t\t\ttimestamp: new Date().toLocaleString(),\n      userName: userName\n\t\t}\n    socket.emit('send-message', msg)\n    console.log('sent message: ')\n    console.log(msg)\n    setMessageText('')\n  }\n\n  return (\n\t\t<>\n\t\t\t{room !== '' ? \n      \n        <form className='message-input-window' onSubmit={sendMessage}>\n          <input value={messageText} onChange={(e) => setMessageText(e.target.value)} className='message-input' />\n          <button type='submit' className='send-message'>Send</button>\n        </form>\n        \n       : '' }\n    </>\n\t\t\n\t)\n  // Version requiring auth:\n  // return loggedIn\n  //     ? (<Redirect to='/' />)\n  //     : (\n  //       <div>\n  //         <input value={roomName} onChange={(e) => setRoomName(e.target.value)} />\n  //         <button onClick={createRoom} />\n  //       </div>\n  //     )\n}\n\nexport default MsgInput","import React from 'react'\nimport apiUrl from '../../apiConfig'\n\nconst timeStampStyle = {\n\tcolor: 'rgba(123, 115, 115, 0.70)',\n}\n\nconst Message = (props) => {\n\tconsole.log('imgurl:')\n\tconst imgUrl = apiUrl + '/img/' + props.userName\n\tconsole.log(imgUrl)\n  return (\n\t\t<div className='message-layout'>\n\t\t\t<img col='1' className='userImage' src={imgUrl} />\n\t\t\t<li col='2'>\n\t\t\t\t<strong>{props.userName}</strong> <a style={timeStampStyle}>{props.timestamp}</a>:\n\t\t\t\t<br />\n\t\t\t\t<section className='message-text'>{props.text}</section>\n\t\t\t\t{/* <a>\n\t\t\t\t\t<i className='fab fa-thumbs-up'></i>\n\t\t\t\t</a>\n\t\t\t\t<a>\n\t\t\t\t\t<i className='fab fa-thumbs-down'></i>\n\t\t\t\t</a>\n\t\t\t\t<a>\n\t\t\t\t\t<i className='fab fa-smile'></i>\n\t\t\t\t</a>\n\t\t\t\t<a>\n\t\t\t\t\t<i className='fab fa-heart'></i>\n\t\t\t\t</a>\n\t\t\t\t<a>\n\t\t\t\t\t<i className='fab fa-sad-tear'></i>\n\t\t\t\t</a> */}\n\t\t\t</li>\n\t\t</div>\n\t)\n}\n\n\nexport default Message","import React, { useEffect } from 'react'\n\nconst RoomTitle = ({ room }) => {\n\n  useEffect(() => {\n    console.log('in room: ', room)\n  }, [room])\n\n  return (\n    <>\n      {room ? \n        <h3 className='room-title'>{room}</h3>\n        :\n        ''\n      }\n    </>\n  )\n}\n\nexport default RoomTitle\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n// import React, { useContext } from 'react'\n// import AppContext from '../context/context'\n\nconst createRoom = (roomName, id, token) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/create-room',\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: {\n      room: {\n        name: roomName\n      },\n      userId: id\n    }\n  })\n}\n\nexport default createRoom\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nconst showRooms = (token) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/show-rooms',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n}\n\nexport default showRooms\n","import React, { useContext, useEffect, useState, createRef } from 'react' \nimport { Link } from 'react-router-dom'\nimport AppContext from '../../context/context'\nimport { Container, Row, Col, Form, DropdownButton, ButtonGroup } from 'react-bootstrap'\nimport Input from './MsgInput'\nimport Message from './MessageJSX'\nimport RoomTitle from './RoomTitle'\nimport createRoom from '../../api/CreateRoom'\nimport showRooms from '../../api/ShowRooms'\nimport { SET_ROOMS_ID } from '../../context/action-types'\n\nconst AlwaysScrollToBottom = () => {\n\tconst elementRef = createRef()\n\tuseEffect(() => elementRef.current.scrollIntoView({behavior: 'smooth'}))\n\treturn <div ref={elementRef} />\n}\n\nconst MainContent = () => {\n  console.log('maincontent reloaded')\n  const { state, dispatch } = useContext(AppContext)\n\n  const [messages, setMessages] = useState([])\n  const [components, setComponents] = useState([])\n  const [newMessageObj, setNewMessageObj] = useState(null)\n  const [roomName, setRoomName] = useState('')\n  const { rooms, userId, token } = state\n  const [roomsJSX, setRoomsJSX] = useState(null)\n  const [currentRoom, setCurrentRoom] = useState('')\n  const [changedRoom, setChangedRoom] = useState('')\n  const [currentRoomName, setCurrentRoomName] = useState('')\n  const [changedRoomName, setChangedRoomName] = useState('')\n\n  const changeRoom = (roomId, roomName) => {\n    console.log('changing room to: ', roomId)\n    setChangedRoom(roomId)\n    setChangedRoomName(roomName)\n  }\n\n  useEffect(() => {\n    console.log('room has been changed')\n    if (changedRoom === currentRoom) {\n      return\n    } else {\n      setMessages([])\n      setCurrentRoom(changedRoom)\n      setCurrentRoomName(changedRoomName)\n    }\n  }, [changedRoom])\n\n  useEffect(() => {\n    if (rooms) {\n      console.log(rooms)\n      setRoomsJSX(rooms.map(room => (\n        <li key={`${room._id}`}>\n          <a href='#' onClick={() => changeRoom(room._id, room.name)}>{`${room.name}`}</a>\n        </li>\n      )))\n    }\n  }, [rooms])\n\n  useEffect(async () => {\n    let newArray = []\n    const response = await showRooms(token)\n    const existingRooms = response.data.room\n    console.log('existing rooms: ', existingRooms, 'saved rooms: ', rooms)\n    if (!rooms || !rooms[0]) {\n      existingRooms.forEach(existingRoom => {\n        if (existingRoom.validUsers.includes(userId)) {\n          newArray.push(existingRoom)\n        }\n      })\n      // setCurrentRoom(newArray[0]._id)\n    }\n    console.log(newArray)\n    dispatch({\n      type: SET_ROOMS_ID,\n      payload: newArray\n    })\n  }, [])\n\n  const onCreateRoom = async (event) => {\n    event.preventDefault()\n    let newArray = []\n    console.log(roomName, state.userId)\n    const room = await createRoom(roomName, userId, token)\n    if (rooms.length > 0) {\n      newArray = [...rooms]\n      newArray.push(room.data.room)\n    } else {\n      newArray = [room.data.room]\n    }\n    dispatch({\n      type: SET_ROOMS_ID,\n      payload: newArray\n    })\n    // state.rooms.push(room.data.room)\n    console.log(room)\n  }\n\n  const newMessage = (msg) => {\n    console.log('setting new msg')\n    console.log(msg)\n    setNewMessageObj(msg)\n  }\n\n  useEffect(() => {\n    console.log('hit new message useeffect')\n    if (!newMessageObj) {\n      return\n    }\n    const newArr = [...messages]\n    newArr.push(newMessageObj)\n    setMessages(newArr)\n    setNewMessageObj(null)\n  }, [newMessageObj])\n\n  useEffect(() => {\n    setComponents(messages.map((message, i) => (\n      <Message \n        userName={message.userName}\n        timestamp={message.timestamp}\n        text={message.message}\n        key={message.userName + i.toString()}\n      />\n    )))\n  }, [messages])\n\n  return (\n    <Container>\n      {/* Second row - will contain rooms/DMs as well as main content */}\n      <Row className='top-row'>\n        <Col className='col-2'>\n          <div className='left-side-nav'>\n            <Row>\n              <Col><h4>Rooms</h4></Col>\n              <Col>\n              <DropdownButton\n                as={ButtonGroup}\n                key={'end'}\n                id={`dropdown-button-drop-end`}\n                drop={'end'}\n                variant=\"secondary\"\n                title={<img src='https://icongr.am/clarity/add.svg?size=16' />}\n                >\n                  {/* <Dropdown.Item eventKey='1' as='form' > */}\n                  <Form onSubmit={onCreateRoom}>\n                    <Form.Group controlId='room-name'>\n                      <Form.Control \n                        required\n                        type='room-name' \n                        name='create-room'\n                        value={roomName}\n                        placeholder='Enter Room Name'\n                        onChange={(e) => setRoomName(e.target.value)} \n                      />\n                      <button type='submit'>Create</button>\n                    </Form.Group>\n                  </Form>\n                {/* </Dropdown.Item> */}\n                </DropdownButton>\n              </Col>\n            </Row>\n            <Row>\n              {/* TODO: Make this into its own component */}\n              <section className='open-rooms'>\n                <ul>\n                  {roomsJSX}\n                </ul>\n              </section>\n            </Row>\n          </div>\n          {/* Ayoub this is your spot to add active users */}\n            <Row className='active-users'>\n              <li>Tony</li>\n              <li>Ayoub</li>\n              <li>Jonah</li>\n              <li>Hanif</li>\n              <li>Bill</li>\n            </Row>\n        </Col>\n        <Col className='main-content col-9'>\n          <Row>\n            <RoomTitle room={currentRoomName} />\n          </Row>\n            <section className='messages-window'>\n              <ul className='messages'>\n                {currentRoom ? components : 'No room selected. Please join a room to start a conversation!'}\n                <AlwaysScrollToBottom />\n              </ul>\n            </section>\n            <Input received={newMessage} room={currentRoom} />\n            {/* <form className='message-input-window'>\n              <input className='message-input' />\n              <button className='send-message'>Send</button>\n            </form> */}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default MainContent\n","import React, { useState, useContext, createRef } from 'react'\nimport { Redirect, withRouter } from 'react-router-dom'\nimport AppContext from '../../context/context'\nimport { SET_TOKEN, SET_USER_ID } from '../../context/action-types'\nimport { useHistory } from 'react-router-dom'\n\nimport { signUp, signIn, uploadPfp } from '../../api/auth'\nimport \"../../all-styles/SignUp.scss\"\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst imgConfig = {\n\tquality: 0.2,\n\tmaxWidth: 800,\n\tmaxHeight: 600,\n\tautoRotate: true,\n}\n\nconst SignUp = () => {\n    const { state, dispatch } = useContext(AppContext)\n    const { loggedIn } = state\n    const history = useHistory()\n    const [email, setEmail] = useState('')\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [passConfirm, setPassConfirm] = useState('')\n    const imageRef = createRef()\n\n    const onSignUp = async (e) => {\n        e.preventDefault()\n        console.log(imageRef.current)\n        console.log(imageRef.current.files)\n        //let resizedImage = await readAndCompressImage(imageRef.current.files[0], imgConfig)\n        // const data = new FormData(e.target)\n        const file = imageRef.current.files[0]\n        const type = file.name.split('.').pop()\n        console.log(type)\n        const apiObj = {\n            email: email,\n            userName: username,\n            password: password,\n            passwordConfirmation: passConfirm,\n        }\n        signUp(apiObj)\n            .then(() => signIn(apiObj))\n            .then((res) => {\n                uploadPfp(imageRef.current.files[0], res.data.user.userName)\n                dispatch({\n                    type: SET_USER_ID,\n                    payload: res.data.user._id\n                })\n                dispatch({\n                    type: SET_TOKEN,\n                    payload: res.data.user.token\n                })\n            })\n            .then(() =>{\n                // success toast here\n            })\n            .then(() => history.push('/'))\n            .catch((error) => {\n                setEmail('')\n                setUsername('')\n                setPassword('')\n                setPassConfirm('')\n                // toast error here\n            })\n        }\n\n    return loggedIn ? (\n\t\t\t<Redirect to='/' />\n\t\t) : (\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-sm-10 col-md-8 mx-auto mt-5'>\n\t\t\t\t\t<h3>Sign Up</h3>\n\t\t\t\t\t<Form onSubmit={onSignUp}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\ttype='username'\n\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\tplaceholder='Enter username'\n\t\t\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password Confirmation</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tname='passwordConfirmation'\n\t\t\t\t\t\t\t\tvalue={passConfirm}\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder='Confirm Password'\n\t\t\t\t\t\t\t\tonChange={(e) => setPassConfirm(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Profile Picture</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\tname='image'\n\t\t\t\t\t\t\t\tid='imagePicker'\n\t\t\t\t\t\t\t\taccept='image/*'\n\t\t\t\t\t\t\t\tmultiple={false}\n\t\t\t\t\t\t\t\t//onChange={(e) => imagePicker(e)}\n                                ref={imageRef}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button variant='primary' type='submit'>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n}\n\nexport default SignUp\n","import React, { useContext, useState } from 'react'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport AppContext from '../../context/context'\n\n\nimport \"../../all-styles/SignIn.scss\"\nimport { toast } from 'react-toastify'\nimport { SET_TOKEN, SET_USER_ID, SET_SIGNEDIN, SET_USERNAME, SET_ROOMS_ID } from '../../context/action-types'\nimport { signIn } from '../../api/auth'\nimport { Form, Button } from 'react-bootstrap'\n\n\nconst SignIn = () => {\n    const { state, dispatch } = useContext(AppContext)\n    const { loggedIn } = state\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const onSignIn = (event) => {\n      event.preventDefault()\n\n      const signInObj = {\n          userName: username,\n          password: password\n      }\n\n      signIn(signInObj)\n        .then((res) => {\n            // console.log('login response: ')\n            // console.log(res.data, 'state: ', state)\n            dispatch({\n                type: SET_USER_ID,\n                payload: res.data.user._id\n            })\n            dispatch({\n                type: SET_TOKEN,\n                payload: res.data.user.token\n            })\n            dispatch({\n                type: SET_SIGNEDIN,\n                payload: true\n            })\n            dispatch({\n                type: SET_USERNAME,\n                payload: res.data.user.userName\n            })\n            dispatch({\n                type: SET_ROOMS_ID,\n                payload: res.data.user.rooms\n            })\n        })\n        .then(() =>{\n          // toast alert here\n        })\n        .then(() => history.push('/'))\n        .catch((error) => {\n          setUsername('')\n          setPassword('')\n          //error toast here\n        })\n    }\n\n\n  return (\n      loggedIn ? <Redirect to='/' /> :\n    <div className='row signin-parent-wrapper'>\n      <div className='signin-form-wrapper'>\n        <h3 className=\"signin-header3\">Login</h3>\n        <Form onSubmit={onSignIn} className=\"signin-form\">\n          <Form.Group controlId='username'>\n            <Form.Label className=\"label-username\">Username</Form.Label>\n            <Form.Control\n              required\n              type='username'\n              name='username'\n              value={username}\n              placeholder='Enter username'\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import { useContext, useEffect } from 'react'\nimport { useHistory, Redirect } from 'react-router-dom'\nimport AppContext from '../../context/context'\nimport { ALL_TYPES } from '../../context/action-types'\nimport { signOut } from '../../api/auth'\n\n\nconst SignOut = () => {\n    const { state, dispatch } = useContext(AppContext)\n    const history = useHistory()\n    const { loggedIn, token } = state\n\n    useEffect(() => {\n        if (!loggedIn) {\n            return\n        }\n        signOut(token)\n            .finally(() => {\n                // success toast here\n            })\n            .finally(() => {\n                ALL_TYPES.forEach((type) => {\n                    console.log(type)\n                    dispatch({\n                        type: type,\n                        payload: null,\n                    })\n                })\n            })\n            .finally(() => history.push('/'))\n    }, [])\n\n    return !loggedIn ? <Redirect to='/' /> : null\n}\n\nexport default SignOut\n","import React, { useReducer } from 'react'\nimport { Route } from 'react-router-dom'\nimport AppContext from './context/context'\nimport reducer from './context/reducer'\n\nimport \"./all-styles/App.scss\"\n\nimport Header from './components/Header/Header'\nimport MainContent from './components/Main/MainContent'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\n\nconst initialState = {\n    loggedIn: false,\n    userId: null,\n\t\tuserName: null,\n    token: null,\n    shouldSaveState: false,\n\t\tuserName: null,\n\t\trooms: []\n}\n\nconst App = () => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    return (\n\t\t\t\t<AppContext.Provider value={{ state, dispatch }}>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<main className='container'>\n\t\t\t\t\t\t<Route path='/sign-up' component={SignUp} />\n\t\t\t\t\t\t<Route path='/sign-in' component={SignIn} />\n\t\t\t\t\t\t<Route path='/sign-out' component={SignOut} />\n            {/* Change Password is running in shared/Modal component */}\n\t\t\t\t\t</main>\n\t\t\t\t\t{state.loggedIn ? <MainContent /> : ''}\n\t\t\t\t\t\n\t\t\t\t</AppContext.Provider>\n\t\t)\n  }\n\n\nexport default App\n\n// add bill and hanif","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}